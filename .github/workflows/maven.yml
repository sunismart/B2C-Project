name: Build and Deploy

on:
  push:
    branches:
      - master  # Trigger on push to the master branch
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build the project with Maven
        run: mvn clean install -f ecommerce-multivendor-backend-master/pom.xml

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file ecommerce-multivendor-backend-master/pom.xml -DskipTests

      - name: Set up Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>nexus-snapshots</id>
                      <username>admin</username>
                      <password>nexus</password>
                    </server>
                    <server>
                      <id>nexus-releases</id>
                      <username>admin</username>
                      <password>nexus</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml

      - name: Build and deploy to Nexus
        run: mvn -B clean deploy --file ecommerce-multivendor-backend-master/pom.xml -DskipTests

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build Docker image after Maven build
      - name: Build Docker image
        run: |
          docker build -t your-docker-image-name:latest -f ecommerce-multivendor-backend-master/Dockerfile ecommerce-multivendor-backend-master

      - name: Push Docker image to Docker Hub
        run: |
          docker push your-docker-image-name:latest
